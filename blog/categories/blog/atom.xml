<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Blog | Cometor]]></title>
  <link href="http://cometor.github.io/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://cometor.github.io/"/>
  <updated>2013-12-03T21:27:19+08:00</updated>
  <id>http://cometor.github.io/</id>
  <author>
    <name><![CDATA[cometor]]></name>
    <email><![CDATA[xiaqz2nd@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress 搭建 Blog 指南]]></title>
    <link href="http://cometor.github.io/blog/2013/10/10/octopress-da-jian-blog-zhi-nan/"/>
    <updated>2013-10-10T21:53:00+08:00</updated>
    <id>http://cometor.github.io/blog/2013/10/10/octopress-da-jian-blog-zhi-nan</id>
    <content type="html"><![CDATA[<p><a href="http://octopress.org/">Octopress</a>是基于<a href="https://github.com/mojombo/jekyll">Jekyll</a>的静态Blog系统，支持以<a href="http://wowubuntu.com/markdown/">Markdown</a>语法快速书写Blog，被誉为“A blogging framework for hackers”。利用Octopress可以很方便地搭建和部署个人的Blog。下面简单介绍在OS X 10.8下搭建个人Blog，并部署到<a href="https://github.com">GitHub</a>的过程。</p>

<h2>安装Ruby</h2>

<p>根据Octopress官网的说明，必须安装Ruby 1.9.3，假定OS X上已经安装了Git和RVM，接下来安装Ruby 1.9.3：</p>

<p><code>
rvm install 1.9.3
rvm use 1.9.3 --default
</code></p>

<p>安装完成后，执行<code>ruby -v</code>，确认默认Ruby版本为1.9.3。</p>

<h2>安装Octopress</h2>

<p>首先，将Octopress克隆到本地：</p>

<p><code>
git clone git://github.com/imathis/octopress.git octopress
</code></p>

<p>然后，安装依赖：</p>

<p><code>
cd octopress
gem install bundler
bundle install
</code></p>

<p>最后，安装默认主题：</p>

<p>```
rake install</p>

<p>```</p>

<h2>配置Octopress</h2>

<p>接着需要对Octopress做个最简单的配置。</p>

<p>在Octopress目录下，用编辑器打开<code>_config.yml</code>文件，这个也是Jekyll的配置文件。先配置<code>url</code>、<code>title</code>、<code>subtitle</code>几项，其他配置项后面再说：</p>

<ul>
<li>url：Blog的网址。由于我们准备部署到GitHub上，一般配置为<code>http://username.github.io</code>。这里需要把<code>username</code>替换成你需要的名称。</li>
<li>title：Blog的主标题。</li>
<li>subtitle：Blog的副标题。</li>
</ul>


<h2>发布博文</h2>

<p>接下来，发布一篇博文。这里使用<code>rake new_post</code>命令，后面跟上文章的标题。</p>

<p>```
rake new_post[&ldquo;title&rdquo;]</p>

<p>```</p>

<p>文章的标题支持中文。如果执行时提示无效字符，可以通过命令<code>export LANG=zh_cn.utf-8</code>配置环境变量解决。</p>

<p>执行后，会生成一个以当前日期和指定标题命名的Markdown文档，形如<code>YYYY-MM-DD-title.markdown</code>。文档的位置在<code>source/_posts/</code>下。Octopress要求，所有的博文必须保存在该处。</p>

<p>打开该文档，文档头部包含了一些描述文档的元数据。在元数据下面就可以使用Markdown语法写博文了。</p>

<p>博文编写完成后，需要由Markdown文档生成静态Html页面：</p>

<p><code>
rake generate
</code>
然后，可以在本地预览最终的Blog：</p>

<p><code>
rake preview
</code>
执行后，会在本地启动一个Web服务器，默认端口4000。可以在浏览器中访问<code>http://localhost:4000</code>查看Blog的效果。</p>

<h2>部署到GitHub Pages</h2>

<p>接下来，可以把Octopress部署到国外免费的云上，常见的选择有<a href="http://pages.github.com/">GitHub Pages</a>或者<a href="https://www.heroku.com/%E2%80%8E">Heroku</a>。这里我选择部署到GitHub Pages上。</p>

<p>首先需要在GitHub上新建一个repo仓库，仓库名称设置为<code>username.github.io</code>。即Octopress配置文件<code>_config.yml</code>里<code>url</code>的名称。</p>

<p>建好仓库后，我们生成待部署的内容：</p>

<p><code>
rake setup_github_pages
</code>
命令执行时会要求你输入仓库的url，根据提示，进行输入即可。完成后，会生成一个名为<code>_deploy</code>的目录。</p>

<p>最后生成整个Blog，并部署到仓库中：</p>

<p><code>
rake generate
rake deploy
</code>
完成了，现在可以通过<code>http://username.github.io</code>来访问Blog啦！</p>

<h2>更换主题</h2>

<p>对于Octopress的默认主题不满意？也没关系，这里收集了大量的第三方主题：<a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes</a>。每个主题都有预览和详细说明。</p>

<p>BTW：本Blog使用的是<a href="https://github.com/shashankmehta/greyshade">Greyshade</a>主题。</p>
]]></content>
  </entry>
  
</feed>
